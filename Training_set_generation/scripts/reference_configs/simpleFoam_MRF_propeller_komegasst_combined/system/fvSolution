/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  v2206                                 |
|   \\  /    A nd           | Website:  www.openfoam.com                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      fvSolution;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

solvers
{
    p
    {
/*
        solver          GAMG;
        tolerance       1e-06;
        relTol          0.01;
        smoother        GaussSeidel;
        nPreSweeps      0;
        nPostSweeps     2;
        nFinestSweeps   2;
        cacheAgglomeration false;
        nCellsInCoarsestLevel 10;
        agglomerator    faceAreaPair;
        mergeLevels     1;
*/

        solver          PCG;
        preconditioner
        {
            preconditioner  GAMG;
            tolerance       1e-06;	//1e-06 1e-08
            relTol          0.0;	//0.01 0
            nVcycles        2;
            smoother        GaussSeidel;
            nPreSweeps      0;
            nPostSweeps     2;
            nFinestSweeps   2;
            cacheAgglomeration false;
            nCellsInCoarsestLevel 10;
            agglomerator    faceAreaPair;
            mergeLevels     1;
        }

        tolerance       1e-06;
        relTol          0.0001;
        //maxIter         20;

/*
        solver          PCG;
        preconditioner  DIC;
        tolerance       1e-6;
        relTol          0.01;
*/

        minIter 1;
    }

    Phi
    {
        $p;
    }
    

    U
    {
        solver          smoothSolver;
        smoother        GaussSeidel;
        tolerance       1e-8;
        relTol          0.0001;
        nSweeps         1;
    }

    k
    {
        solver          smoothSolver;
        smoother        GaussSeidel;
        tolerance       1e-8;
        relTol          0.0001;
        nSweeps         1;
    }

    nuTilda
    {
        solver          smoothSolver;
        smoother        GaussSeidel;
        tolerance       1e-8;
        relTol          0.0001;
        nSweeps         1;
    }    

    omega
    {
        solver          smoothSolver;
        smoother        GaussSeidel;
        tolerance       1e-8;
        relTol          0.0001;
        nSweeps         1;
    }

    "(U|k|epsilon|e|nuTilda)Final"
    {
        solver          smoothSolver;
        smoother        symGaussSeidel;
        tolerance       1e-6;
        relTol          0;
    }
	
	R
	{
		solver PBiCG;
		preconditioner DILU;
		tolerance 1e-20;
		relTol 0;
	}    
    
    cellDisplacement
    {
        $p_rgh;
        relTol          0;
    }


}

SIMPLE
{
    nNonOrthogonalCorrectors 0;
    consistent yes;
    pRefCell    0;
    pRefValue    0;
}

potentialFlow
{
    nNonOrthogonalCorrectors 10;
}

relaxationFactors
{
    fields
    {
        p           0.29;
    }
    equations
    {
        U               0.9;
        k               0.7;
        omega           0.7;
        nuTilda         0.7;
        R               0.7;
    }
}

cache
{
    grad(U);
}

// ************************************************************************* //
